Compute FID value...
  0%|          | 0/200 [00:00<?, ?it/s]  4%|▍         | 8/200 [00:13<05:23,  1.69s/it]  8%|▊         | 16/200 [00:26<04:58,  1.62s/it] 12%|█▏        | 24/200 [00:39<04:48,  1.64s/it] 16%|█▌        | 32/200 [00:51<04:29,  1.61s/it] 20%|██        | 40/200 [01:03<04:08,  1.56s/it] 24%|██▍       | 48/200 [01:23<04:43,  1.87s/it] 28%|██▊       | 56/200 [01:43<04:57,  2.06s/it] 32%|███▏      | 64/200 [02:02<04:55,  2.17s/it] 36%|███▌      | 72/200 [02:18<04:31,  2.12s/it] 40%|████      | 80/200 [02:35<04:14,  2.12s/it] 44%|████▍     | 88/200 [02:53<04:02,  2.16s/it] 48%|████▊     | 96/200 [03:10<03:44,  2.16s/it] 52%|█████▏    | 104/200 [03:26<03:23,  2.12s/it] 56%|█████▌    | 112/200 [03:43<03:05,  2.11s/it] 60%|██████    | 120/200 [04:00<02:49,  2.12s/it] 64%|██████▍   | 128/200 [04:19<02:36,  2.18s/it] 68%|██████▊   | 136/200 [04:36<02:18,  2.16s/it] 72%|███████▏  | 144/200 [04:53<02:00,  2.15s/it] 76%|███████▌  | 152/200 [05:11<01:44,  2.18s/it] 80%|████████  | 160/200 [05:28<01:26,  2.16s/it] 84%|████████▍ | 168/200 [05:46<01:10,  2.19s/it] 88%|████████▊ | 176/200 [06:02<00:51,  2.14s/it] 92%|█████████▏| 184/200 [06:20<00:34,  2.17s/it] 96%|█████████▌| 192/200 [06:36<00:16,  2.12s/it]100%|██████████| 200/200 [06:53<00:00,  2.14s/it]100%|██████████| 200/200 [06:53<00:00,  2.07s/it]
  0%|          | 0/200 [00:00<?, ?it/s]  4%|▍         | 8/200 [00:17<06:58,  2.18s/it]  8%|▊         | 16/200 [00:34<06:39,  2.17s/it] 12%|█▏        | 24/200 [00:52<06:21,  2.17s/it] 16%|█▌        | 32/200 [01:08<05:59,  2.14s/it] 20%|██        | 40/200 [01:25<05:42,  2.14s/it] 24%|██▍       | 48/200 [01:43<05:31,  2.18s/it] 28%|██▊       | 56/200 [02:02<05:17,  2.20s/it] 32%|███▏      | 64/200 [02:21<05:08,  2.27s/it] 36%|███▌      | 72/200 [02:38<04:46,  2.24s/it] 40%|████      | 80/200 [02:57<04:32,  2.27s/it] 44%|████▍     | 88/200 [03:15<04:14,  2.27s/it] 48%|████▊     | 96/200 [03:30<03:43,  2.15s/it] 52%|█████▏    | 104/200 [03:45<03:19,  2.08s/it] 56%|█████▌    | 112/200 [04:01<02:59,  2.04s/it] 60%|██████    | 120/200 [04:16<02:40,  2.00s/it] 64%|██████▍   | 128/200 [04:34<02:27,  2.05s/it] 68%|██████▊   | 136/200 [04:49<02:07,  1.99s/it] 72%|███████▏  | 144/200 [05:03<01:47,  1.92s/it] 76%|███████▌  | 152/200 [05:17<01:30,  1.88s/it] 80%|████████  | 160/200 [05:32<01:15,  1.89s/it] 84%|████████▍ | 168/200 [05:48<01:01,  1.92s/it] 88%|████████▊ | 176/200 [06:04<00:46,  1.93s/it] 92%|█████████▏| 184/200 [06:19<00:30,  1.92s/it] 96%|█████████▌| 192/200 [06:33<00:15,  1.89s/it]100%|██████████| 200/200 [06:48<00:00,  1.89s/it]100%|██████████| 200/200 [06:49<00:00,  2.05s/it]
/data/home/hrithiknr/miniconda3/envs/StyleID/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/data/home/hrithiknr/miniconda3/envs/StyleID/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Compute content distance...
Setting up [LPIPS] perceptual loss: trunk [alex], v[0.1], spatial [off]
Loading model from: /data/home/hrithiknr/miniconda3/envs/StyleID/lib/python3.8/site-packages/lpips/weights/v0.1/alex.pth
  0%|          | 0/200 [00:00<?, ?it/s]  4%|▍         | 8/200 [00:04<01:47,  1.78it/s]  8%|▊         | 16/200 [00:07<01:28,  2.07it/s] 12%|█▏        | 24/200 [00:11<01:19,  2.20it/s] 16%|█▌        | 32/200 [00:14<01:11,  2.34it/s] 20%|██        | 40/200 [00:17<01:08,  2.33it/s] 24%|██▍       | 48/200 [00:20<01:02,  2.45it/s] 28%|██▊       | 56/200 [00:24<00:59,  2.42it/s] 32%|███▏      | 64/200 [00:27<00:56,  2.40it/s] 36%|███▌      | 72/200 [00:31<00:54,  2.37it/s] 40%|████      | 80/200 [00:34<00:50,  2.40it/s] 44%|████▍     | 88/200 [00:37<00:46,  2.42it/s] 48%|████▊     | 96/200 [00:41<00:43,  2.38it/s] 52%|█████▏    | 104/200 [00:44<00:40,  2.39it/s] 56%|█████▌    | 112/200 [00:47<00:37,  2.36it/s] 60%|██████    | 120/200 [00:50<00:33,  2.42it/s] 64%|██████▍   | 128/200 [00:54<00:29,  2.42it/s] 68%|██████▊   | 136/200 [00:57<00:26,  2.39it/s] 72%|███████▏  | 144/200 [01:01<00:23,  2.39it/s] 76%|███████▌  | 152/200 [01:04<00:19,  2.43it/s] 80%|████████  | 160/200 [01:07<00:17,  2.35it/s] 84%|████████▍ | 168/200 [01:11<00:13,  2.37it/s] 88%|████████▊ | 176/200 [01:14<00:10,  2.36it/s] 92%|█████████▏| 184/200 [01:18<00:06,  2.31it/s] 96%|█████████▌| 192/200 [01:21<00:03,  2.28it/s]100%|██████████| 200/200 [01:25<00:00,  2.27it/s]100%|██████████| 200/200 [01:25<00:00,  2.34it/s]
Setting up [LPIPS] perceptual loss: trunk [alex], v[0.1], spatial [off]
Loading model from: /data/home/hrithiknr/miniconda3/envs/StyleID/lib/python3.8/site-packages/lpips/weights/v0.1/alex.pth
  0%|          | 0/200 [00:00<?, ?it/s]  4%|▍         | 8/200 [00:05<02:04,  1.54it/s]  8%|▊         | 16/200 [00:08<01:33,  1.97it/s] 12%|█▏        | 24/200 [00:11<01:21,  2.17it/s] 16%|█▌        | 32/200 [00:15<01:15,  2.24it/s] 20%|██        | 40/200 [00:18<01:08,  2.35it/s] 24%|██▍       | 48/200 [00:21<01:02,  2.44it/s] 28%|██▊       | 56/200 [00:24<01:00,  2.37it/s] 32%|███▏      | 64/200 [00:27<00:56,  2.43it/s] 36%|███▌      | 72/200 [00:31<00:51,  2.48it/s] 40%|████      | 80/200 [00:33<00:45,  2.66it/s] 44%|████▍     | 88/200 [00:36<00:42,  2.64it/s] 48%|████▊     | 96/200 [00:40<00:41,  2.54it/s] 52%|█████▏    | 104/200 [00:43<00:37,  2.55it/s] 56%|█████▌    | 112/200 [00:46<00:34,  2.56it/s] 60%|██████    | 120/200 [00:49<00:31,  2.54it/s] 64%|██████▍   | 128/200 [00:52<00:28,  2.53it/s] 68%|██████▊   | 136/200 [00:56<00:26,  2.44it/s] 72%|███████▏  | 144/200 [00:59<00:23,  2.43it/s] 76%|███████▌  | 152/200 [01:02<00:19,  2.40it/s] 80%|████████  | 160/200 [01:06<00:17,  2.35it/s] 84%|████████▍ | 168/200 [01:09<00:13,  2.37it/s] 88%|████████▊ | 176/200 [01:13<00:09,  2.40it/s] 92%|█████████▏| 184/200 [01:16<00:06,  2.42it/s] 96%|█████████▌| 192/200 [01:19<00:03,  2.48it/s]100%|██████████| 200/200 [01:22<00:00,  2.45it/s]100%|██████████| 200/200 [01:22<00:00,  2.41it/s]
/data/home/hrithiknr/miniconda3/envs/StyleID/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG19_Weights.IMAGENET1K_V1`. You can also use `weights=VGG19_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Compute CFSD value...
  0%|          | 0/200 [00:00<?, ?it/s]  0%|          | 1/200 [00:10<33:48, 10.19s/it]  1%|          | 2/200 [00:19<31:58,  9.69s/it]  2%|▏         | 3/200 [00:27<29:54,  9.11s/it]  2%|▏         | 4/200 [00:35<28:06,  8.61s/it]  2%|▎         | 5/200 [00:43<27:00,  8.31s/it]  3%|▎         | 6/200 [00:51<26:16,  8.13s/it]  4%|▎         | 7/200 [00:58<25:24,  7.90s/it]  4%|▍         | 8/200 [01:05<24:27,  7.64s/it]  4%|▍         | 9/200 [01:13<24:02,  7.55s/it]  5%|▌         | 10/200 [01:20<23:47,  7.51s/it]  6%|▌         | 11/200 [01:27<23:24,  7.43s/it]  6%|▌         | 12/200 [01:35<23:34,  7.52s/it]  6%|▋         | 13/200 [01:42<23:00,  7.38s/it]  7%|▋         | 14/200 [01:49<22:29,  7.25s/it]  8%|▊         | 15/200 [01:57<22:41,  7.36s/it]  8%|▊         | 16/200 [02:05<23:40,  7.72s/it]  8%|▊         | 17/200 [02:13<23:25,  7.68s/it]  9%|▉         | 18/200 [02:20<23:08,  7.63s/it] 10%|▉         | 19/200 [02:28<22:50,  7.57s/it] 10%|█         | 20/200 [02:36<23:28,  7.83s/it] 10%|█         | 21/200 [02:45<24:00,  8.05s/it] 11%|█         | 22/200 [02:54<24:29,  8.25s/it] 12%|█▏        | 23/200 [03:01<23:59,  8.13s/it] 12%|█▏        | 24/200 [03:09<23:28,  8.00s/it] 12%|█▎        | 25/200 [03:17<22:52,  7.84s/it] 13%|█▎        | 26/200 [03:24<22:18,  7.69s/it] 14%|█▎        | 27/200 [03:31<21:58,  7.62s/it] 14%|█▍        | 28/200 [03:45<27:22,  9.55s/it] 14%|█▍        | 29/200 [04:04<35:19, 12.39s/it] 15%|█▌        | 30/200 [04:21<38:49, 13.70s/it] 16%|█▌        | 31/200 [04:37<40:41, 14.45s/it] 16%|█▌        | 32/200 [04:55<42:47, 15.28s/it] 16%|█▋        | 33/200 [05:10<42:37, 15.31s/it] 17%|█▋        | 34/200 [05:30<45:57, 16.61s/it] 18%|█▊        | 35/200 [05:44<43:58, 15.99s/it]